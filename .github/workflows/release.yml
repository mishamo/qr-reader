name: 🚀 Create Release with APK & iOS Build

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.

jobs:
  build-and-release:
    name: 📦 Build Apps & Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 📋 Extract version info
      id: version
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        VERSION=${TAG_NAME#v}
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "release_name=Scan2Sheets $TAG_NAME" >> $GITHUB_OUTPUT
        
    - name: 🏗️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: ⚡ Cache node_modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-
        
    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: 🔧 Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 📦 Install dependencies
      run: |
        if [ -d "node_modules" ]; then
          echo "Using cached node_modules"
          npm ci --prefer-offline --no-audit
        else
          npm ci --no-audit
        fi
      
    - name: 🔍 Enhanced Gradle caching
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.android/build-cache
          android/.gradle
          android/app/build/intermediates
          android/app/build/outputs
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'android/app/src/**') }}
        restore-keys: |
          ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          ${{ runner.os }}-gradle-
          
    - name: 🛠️ Make Gradlew executable
      run: chmod +x ./android/gradlew
      
    - name: 🚀 Build Release APK
      run: |
        cd android
        # Enable Gradle optimizations
        echo "org.gradle.daemon=true" >> gradle.properties
        echo "org.gradle.parallel=true" >> gradle.properties
        echo "org.gradle.configureondemand=true" >> gradle.properties
        echo "org.gradle.caching=true" >> gradle.properties
        ./gradlew assembleRelease --build-cache --parallel --daemon
        
    - name: 📝 Generate Release Notes
      id: release_notes
      run: |
        cat > release_notes.md << EOF
        # 🎉 Scan2Sheets ${{ steps.version.outputs.tag_name }}
        
        ## 📱 What's New
        Conference lead collection app with QR code scanning and Google Sheets integration.
        
        ## ✨ Features
        - 📱 **QR Code Scanner**: Scan contact QR codes with multiple format support
        - 📊 **Google Sheets Integration**: Automatically add contacts to your spreadsheets
        - 🔐 **Google OAuth**: Secure authentication with your Google account
        - 🎨 **Professional UI**: Material Design with custom Scan2Sheets branding
        
        ## 📦 Downloads
        - **Android APK**: Download and install on any Android device
        - **iOS Build**: For testing on iOS Simulator (Xcode required)
        
        ## 🔧 Supported QR Formats
        - **JSON**: \`{"name":"John Doe","email":"john@email.com","phone":"123-456-7890"}\`
        - **Simple**: \`John Doe,john@email.com,123-456-7890\`
        - **vCard**: Standard vCard format with FN, EMAIL, TEL fields
        
        ## 📊 Installation
        1. Download the APK from the Assets below
        2. Enable "Install from Unknown Sources" in Android settings
        3. Install the APK and grant camera permissions
        4. Sign in with your Google account
        5. Start scanning QR codes!
        
        ---
        
        Built with React Native • Generated with Claude Code
        EOF
        
    - name: 🚀 Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: ${{ steps.version.outputs.release_name }}
        tag_name: ${{ steps.version.outputs.tag_name }}
        body_path: release_notes.md
        files: |
          android/app/build/outputs/apk/release/app-release.apk
        prerelease: ${{ contains(steps.version.outputs.tag_name, 'beta') || contains(steps.version.outputs.tag_name, 'alpha') }}
        generate_release_notes: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 📊 Release Summary
      run: |
        echo "### 🎉 Release ${{ steps.version.outputs.tag_name }} Created Successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Release Details:**" >> $GITHUB_STEP_SUMMARY
        echo "- **Tag**: ${{ steps.version.outputs.tag_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **APK**: android/app/build/outputs/apk/release/app-release.apk" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**🔗 Links:**" >> $GITHUB_STEP_SUMMARY
        echo "- [📱 Download APK](https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.tag_name }})" >> $GITHUB_STEP_SUMMARY
        echo "- [📋 View Release](https://github.com/${{ github.repository }}/releases/latest)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**📱 Ready for testing on Android devices!**" >> $GITHUB_STEP_SUMMARY